apiVersion: apps/v1
kind: Deployment
metadata:
  name: privacy-finetuner-master
  namespace: privacy-finetuner
  labels:
    app: privacy-finetuner
    component: master
    version: v1.0.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: privacy-finetuner
      component: master
  template:
    metadata:
      labels:
        app: privacy-finetuner
        component: master
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: privacy-finetuner-service-account
      imagePullSecrets:
      - name: privacy-finetuner-registry
      
      # Node selection for GPU nodes
      nodeSelector:
        accelerator: nvidia-tesla-v100
        node-type: gpu-optimized
      
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      # Pod security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      # Init containers for setup
      initContainers:
      - name: setup-permissions
        image: busybox:1.35
        securityContext:
          runAsUser: 0
        command:
        - sh
        - -c
        - |
          chown -R 1000:1000 /data /models /cache /var/log/privacy-finetuner
          chmod -R 755 /data /models /cache /var/log/privacy-finetuner
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: models-volume
          mountPath: /models
        - name: cache-volume
          mountPath: /cache
        - name: logs-volume
          mountPath: /var/log/privacy-finetuner
      
      containers:
      - name: privacy-finetuner
        image: privacy-finetuner:v1.0.0
        imagePullPolicy: IfNotPresent
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        
        # Resource requirements
        resources:
          requests:
            cpu: "8"
            memory: "32Gi"
            nvidia.com/gpu: "2"
          limits:
            cpu: "16"
            memory: "64Gi"
            nvidia.com/gpu: "2"
        
        # Environment variables
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: CUDA_VISIBLE_DEVICES
          value: "0,1"
        - name: NCCL_DEBUG
          value: "INFO"
        - name: RANK
          value: "0"
        - name: WORLD_SIZE
          value: "4"
        - name: MASTER_ADDR
          value: "privacy-finetuner-master"
        - name: MASTER_PORT
          value: "29500"
        - name: NODE_RANK
          value: "0"
        - name: LOCAL_RANK
          value: "0"
        - name: OMP_NUM_THREADS
          value: "8"
        - name: MKL_NUM_THREADS
          value: "8"
        
        # Secret environment variables
        envFrom:
        - secretRef:
            name: privacy-finetuner-secrets
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: distributed
          containerPort: 29500
          protocol: TCP
        - name: distributed-tcp
          containerPort: 29501
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # Startup probe
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        
        # Volume mounts
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /data
        - name: models-volume
          mountPath: /models
        - name: cache-volume
          mountPath: /cache
        - name: logs-volume
          mountPath: /var/log/privacy-finetuner
        - name: tmp-volume
          mountPath: /tmp
        - name: dev-shm
          mountPath: /dev/shm
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                echo "Gracefully shutting down privacy-finetuner..."
                kill -TERM $(pgrep -f privacy-finetuner)
                sleep 30
      
      # Volumes
      volumes:
      - name: config-volume
        configMap:
          name: privacy-finetuner-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-models-pvc
      - name: cache-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-cache-pvc
      - name: logs-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 5Gi
      - name: dev-shm
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      
      # Pod disruption budget
      terminationGracePeriodSeconds: 300
      restartPolicy: Always
      
      # Affinity and anti-affinity
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: accelerator
                operator: In
                values:
                - nvidia-tesla-v100
                - nvidia-tesla-a100
              - key: node-type
                operator: In
                values:
                - gpu-optimized
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - privacy-finetuner
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: privacy-finetuner-worker
  namespace: privacy-finetuner
  labels:
    app: privacy-finetuner
    component: worker
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: privacy-finetuner
      component: worker
  template:
    metadata:
      labels:
        app: privacy-finetuner
        component: worker
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: privacy-finetuner-service-account
      imagePullSecrets:
      - name: privacy-finetuner-registry
      
      # Node selection for GPU nodes
      nodeSelector:
        accelerator: nvidia-tesla-v100
        node-type: gpu-optimized
      
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      # Pod security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: privacy-finetuner-worker
        image: privacy-finetuner:v1.0.0
        imagePullPolicy: IfNotPresent
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        
        # Resource requirements
        resources:
          requests:
            cpu: "6"
            memory: "24Gi"
            nvidia.com/gpu: "2"
          limits:
            cpu: "12"
            memory: "48Gi"
            nvidia.com/gpu: "2"
        
        # Environment variables (worker-specific)
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: CUDA_VISIBLE_DEVICES
          value: "0,1"
        - name: NCCL_DEBUG
          value: "INFO"
        - name: WORLD_SIZE
          value: "4"
        - name: MASTER_ADDR
          value: "privacy-finetuner-master"
        - name: MASTER_PORT
          value: "29500"
        - name: COMPONENT_TYPE
          value: "worker"
        - name: OMP_NUM_THREADS
          value: "6"
        - name: MKL_NUM_THREADS
          value: "6"
        
        # Dynamic rank assignment via downward API
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        
        # Secret environment variables
        envFrom:
        - secretRef:
            name: privacy-finetuner-secrets
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: distributed
          containerPort: 29500
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Volume mounts
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /data
          readOnly: true
        - name: models-volume
          mountPath: /models
        - name: cache-volume
          mountPath: /cache
        - name: logs-volume
          mountPath: /var/log/privacy-finetuner
        - name: tmp-volume
          mountPath: /tmp
        - name: dev-shm
          mountPath: /dev/shm
      
      # Volumes
      volumes:
      - name: config-volume
        configMap:
          name: privacy-finetuner-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-models-pvc
      - name: cache-volume
        persistentVolumeClaim:
          claimName: privacy-finetuner-cache-pvc
      - name: logs-volume
        emptyDir:
          sizeLimit: 10Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 5Gi
      - name: dev-shm
        emptyDir:
          medium: Memory
          sizeLimit: 8Gi
      
      terminationGracePeriodSeconds: 300
      restartPolicy: Always
      
      # Affinity for worker distribution
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: accelerator
                operator: In
                values:
                - nvidia-tesla-v100
                - nvidia-tesla-a100
        
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - privacy-finetuner
              - key: component
                operator: In
                values:
                - worker
            topologyKey: kubernetes.io/hostname