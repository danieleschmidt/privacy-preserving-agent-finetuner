[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "privacy_finetuner/__init__.py:__version__"
]
bump_message = "bump: version $current_version â†’ $new_version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
changelog_start_rev = "v0.1.0"
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"]
]

[tool.commitizen.changelog]
file = "CHANGELOG.md"
incremental = true
unreleased_version = "Unreleased"
template = """
# Changelog

All notable changes to the Privacy-Preserving Agent Finetuner will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

{% for version in versions -%}
## [{{ version.tag }}] - {{ version.date }}
{% if version.breaking %}
### BREAKING CHANGES
{% for item in version.breaking %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.feat %}
### Added
{% for item in version.feat %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.fix %}
### Fixed
{% for item in version.fix %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.docs %}
### Documentation
{% for item in version.docs %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.style %}
### Style
{% for item in version.style %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.refactor %}
### Refactored
{% for item in version.refactor %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.perf %}
### Performance
{% for item in version.perf %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.test %}
### Tests
{% for item in version.test %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.build %}
### Build
{% for item in version.build %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.ci %}
### CI
{% for item in version.ci %}
- {{ item.description }}
{% endfor %}
{% endif %}
{% if version.chore %}
### Chore
{% for item in version.chore %}
- {{ item.description }}
{% endfor %}
{% endif %}

{% endfor -%}
"""

[tool.commitizen.customize]
message_template = "{{change_type}}{{scope}}: {{message}}"
example = "feat(api): add privacy budget monitoring endpoint"
schema = """
<type>(<scope>): <subject>
<BLANK LINE>
<body>
<BLANK LINE>
<footer>
"""
schema_pattern = "^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|bump)(\\(.+\\))?: .+"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    {value = "feat", name = "feat: A new feature"},
    {value = "fix", name = "fix: A bug fix"},
    {value = "docs", name = "docs: Documentation only changes"},
    {value = "style", name = "style: Changes that do not affect the meaning of the code"},
    {value = "refactor", name = "refactor: A code change that neither fixes a bug nor adds a feature"},
    {value = "perf", name = "perf: A code change that improves performance"},
    {value = "test", name = "test: Adding missing tests or correcting existing tests"},
    {value = "build", name = "build: Changes that affect the build system or external dependencies"},
    {value = "ci", name = "ci: Changes to our CI configuration files and scripts"},
    {value = "chore", name = "chore: Other changes that don't modify src or test files"},
    {value = "revert", name = "revert: Reverts a previous commit"}
]
message = "Select the type of change that you're committing"

[[tool.commitizen.customize.questions]]
type = "input"
name = "scope"
message = "What is the scope of this change? (class or file name): (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Write a short, imperative tense description of the change"

[[tool.commitizen.customize.questions]]
type = "input"
name = "body"
message = "Provide a longer description of the change: (press [enter] to skip)"

[[tool.commitizen.customize.questions]]
type = "input"
name = "footer"
message = "List any BREAKING CHANGES or ISSUES CLOSED by this change: (press [enter] to skip)"